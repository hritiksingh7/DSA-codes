  vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        // Code here 
        
        int n=image.size();
        int m=image[0].size();
        
        int visited[n][m];
        
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++)
            visited[i][j] = 0;
        }
        
        queue<pair<int, int>> q;
        q.push({sr,sc});
        int currColor = image[sr][sc];
        image[sr][sc] = newColor;
        
        while(!q.empty()){
            
            auto front = q.front();
            int i = front.first;
            int j = front.second;
            visited[i][j] = 1;
            q.pop();
            
            // checking for neighbours
            if(i>0 && image[i-1][j] == currColor && visited[i-1][j]==0){
                image[i-1][j] = newColor;
                q.push({i-1, j});
            }
            
            if((i+1)<n && image[i+1][j] == currColor && visited[i+1][j]==0){
                image[i+1][j] = newColor;
                q.push({i+1, j});
            }
            
            if(j>0 && image[i][j-1] == currColor && visited[i][j-1]==0){
                image[i][j-1] = newColor;
                q.push({i, j-1});
            }
            
            if((j+1)<m && image[i][j+1] == currColor && visited[i][j+1]==0){
                
                image[i][j+1] = newColor;
                q.push({i, j+1});
            }
        }
        
        return image;
    }
