// TOP DOWN || RECURSION + MEMOIZATION

#include<vector>
#include<limits.h>

#define MOD 1000000007

long long int add(int a, int b){
    return ((a%MOD) + (b%MOD))%MOD;
}

long long int mul(int a, int b){
    return ((a%MOD) * 1LL * (b%MOD)) % MOD;
}

long long int solve(int n, vector<int> &dp){
    if(n==1 || n==2) return n-1;

    if(dp[n] != -1) return dp[n];

    return dp[n] =  add( mul(n-1, solve(n-1, dp)) , mul(n-1, solve(n-2, dp)));
}

long long int countDerangements(int n) {
    // Write your code here.
    vector<int> dp(n+1, -1);
    return solve(n ,dp);
}




// BOTTOM UP || TABULATION

long long int countDerangements(int n) {

    vector<int> dp(n+1);

    dp[1] = 0; 
    dp[2] = 1;

    for(int i=3; i<=n; i++){
        dp[i] =  add( mul(i-1, dp[i-1]) , mul(i-1, dp[i-2]));
    }

    return dp[n];
}




// SPACE OPTIMIZATION

long long int countDerangements(int n) {

    int prev1 = 1, prev2 = 0;

    for(int i=3; i<=n; i++){
        int ans = add(mul(i-1, prev2) , mul(i-1, prev1));
        prev2 = prev1;
        prev1 = ans;
    }

    return prev1;
}

