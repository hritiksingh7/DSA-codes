 vector<int> singleNumber(vector<int> nums) 
    {
        // Code here.
        // unordered_map<int, int> cnt;
        // vector<int> ans;
        
        // for(int i=0; i<nums.size(); i++){
        //     cnt[nums[i]]++;
        // }
        
        // for(auto it:cnt){
        //     if(it.second == 1)
        //     ans.push_back(it.first);
        // }
        
        // sort(ans.begin(), ans.end());
        // return ans;
        
        int xorans = 0;
        
        for(int i=0; i<nums.size(); i++)
        xorans ^= nums[i];
        
        xorans &= (~(xorans-1));
        
        int left=0, right=0;
        
        for(int i=0; i<nums.size(); i++){
            if(xorans & nums[i])
            left ^= nums[i];
            else
            right ^= nums[i];
        }
