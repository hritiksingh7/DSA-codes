int maximumNonAdjacentSum(vector<int> &nums){
    // Write your code here.
    int n = nums.size();
    if(n == 1)
    return nums[0];

TABULATION
    // vector<int> dp(n+1);
    // dp[0] = nums[0];
    // dp[1] = max(dp[0], nums[1]);

    // for(int i=2; i<n; i++){
    //     int inc = dp[i-2] + nums[i];
    //     int exc = dp[i-1] + 0;

    //     dp[i] = max(inc, exc);
    // }

    // return dp[n-1];

SPACE OPTIMIZE
    int prev2 = 0, prev1 = nums[0];

    for(int i=1; i<n; i++){
        int inc = prev2 + nums[i];
        int exc = prev1 + 0;

        int ans = max(inc, exc);
        prev2 = prev1;
        prev1 = ans;
    }

    return prev1;
}
