vector<int> zigzagTreeTraversal(TreeNode<int> *root)
{
   
   vector<int> result;

   if(root == NULL){
       return result;
   }

   queue<TreeNode<int>*> q;
   q.push(root);

   bool LtoR = 1;
 

   while(!q.empty()){

       int size = q.size();
       vector<int> ans(size);

       for(int i=0; i<size; i++){

           int index;
           TreeNode<int>* frontNode = q.front();
           q.pop();

           if(LtoR){
               index = i;
           }
           else{
               index = size - i - 1;
           }

           ans[index] = frontNode->data;

           if(frontNode->left)
           q.push(frontNode->left);

           if(frontNode->right)
           q.push(frontNode->right);
       }

       if(LtoR)
       LtoR = 0;
       else
       LtoR = 1;
       
    //    for(auto i : ans){
    //        result.push_back(i);
    //    }
    for(int i=0; i<size; i++){
        result.push_back(ans[i]);
    }

   }

   return result;
}
