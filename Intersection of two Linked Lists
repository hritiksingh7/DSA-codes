   int length(ListNode* root){
        int len = 0;

        while(root){
            len++;
            root = root->next;
        }

        return len;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        unordered_map<ListNode*, bool> vis;

        auto h1 = headA;
        auto h2 = headB;

        // while(h1){
        //     vis[h1] = 1;
        //     h1 = h1->next;
        // }

        // while(h2){
        //     if(vis[h2])
        //     return h2;

        //     h2 = h2->next;
        // }

        // return NULL;



        int l1 = length(headA);
        int l2 = length(headB);

        int diff = abs(l1 - l2);
 

        if(l1 == max(l1, l2)){
            while(diff--){
                h1 = h1->next;
            }
        }
        else{
            while(diff--)
            h2 = h2->next;
        }

        while(h1 && h2){
            if(h1 == h2)
            return h1;

            h1 = h1->next;
            h2 = h2->next;
        }

        return NULL;
        
        
    }
